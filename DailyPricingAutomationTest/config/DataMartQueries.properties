

*****************************PriceMonitoring-1P******************************************************************

PRICETREND_EXPECTED_DATE=select min(period) min , max(period) actualdate  from CC_I2O_DATA_MART.viz_ppm_reseller
PRICETREND_EXPECTED_DATE_columns=min,actualdate
DAILY_BBXWINNER=select a.product_code , case when b.Buy_box_winning_seller is null then 'NULL' else b.Buy_box_winning_seller end as bbxwinner from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code  where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a  left join (SELECT distinct product_code,period,Buy_box_winning_seller,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_reseller WHERE  reporting_range ='Daily' and period=(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code  order by  product_sales desc limit 5
DAILY_BBXWINNER_columns=product_code,bbxwinner
DAILY_BBXWINNERPRICE=select a.product_code , case when b.buy_box_price is null then 0 else b.buy_box_price end as bbxprice from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code  where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a  left join (SELECT distinct product_code,period,Buy_box_winning_seller,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_reseller WHERE  reporting_range ='Daily' and period=(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code  order by  product_sales desc limit 5
DAILY_BBXWINNERPRICE_columns=product_code,bbxprice

PAPPOPUP_EXPECTED_DATE=select min(period) min ,MAX(period) actualdate from CC_I2O_DATA_MART.viz_ppm_platforms 
PAPPOPUP_EXPECTED_DATE_columns=min,actualdate
DAILY_NEWEGG_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a  left join (SELECT distinct product_code, period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE reporting_range='Daily' and marketplace  ='newegg' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by  a.product_sales desc limit 5
DAILY_NEWEGG_PRICE_columns=product_code,buy_box_price
DAILY_BESTBUY_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a  left join (SELECT distinct product_code, period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE reporting_range='Daily' and marketplace  ='bestbuy' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by  a.product_sales desc limit 5
DAILY_BESTBUY_PRICE_columns=product_code,buy_box_price
DAILY_WALMART_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a  left join (SELECT distinct product_code, period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE reporting_range='Daily' and marketplace  ='walmart' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by  a.product_sales desc limit 5
DAILY_WALMART_PRICE_columns=product_code,buy_box_price
DAILY_BHPPHOTOVIDEO_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a  left join (SELECT distinct product_code, period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE reporting_range='Daily' and marketplace  ='bhphotovideo' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by  a.product_sales desc limit 5
DAILY_BHPPHOTOVIDEO_PRICE_columns=product_code,buy_box_price
DAILY_AMAZONBBX_PRICE=select a.product_code, case when b.price is null then 0 else price end as buy_box_price   from (select distinct M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true) a left join (SELECT distinct  product_code , round(coalesce((cast(buy_box_price  as float64)),0)) price from CC_I2O_DATA_MART.viz_ppm_platforms  WHERE marketplace='Amazon' and reporting_range ='Daily' and period=(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code =b.product_code order by product_sales desc LIMIT 5
DAILY_AMAZONBBX_PRICE_columns=product_code,buy_box_price

RESDETAILS_EXPECTED_DATE=select min(period) min,max(period) actualdate  from CC_I2O_DATA_MART.viz_ppm_reseller
RESDETAILS_EXPECTED_DATE_columns=min,actualdate
LAST7_DAYS_BBXWINNER=select a.product_code, case when b.buyboxwinner is null then 0 else buyboxwinner end as buyboxwinner   from (SELECT distinct M.product_code,round(product_sales)  product_sales FROM  `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true) a left join (SELECT distinct  product_code , count(distinct reseller_name ) buyboxwinner from CC_I2O_DATA_MART.viz_ppm_reseller where org_type='Amazon_1PP' and won_buy_box='Yes' and period >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY) fromdate)  and period <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) group by product_code) b on a.product_code =b.product_code order by product_sales desc limit 5
LAST7_DAYS_BBXWINNER_columns=product_code,buyboxwinner
LAST30_DAYS_RESELLERS=select a.product_code, case when b.totalresellers is null then 0 else totalresellers end as totalresellers  from (SELECT distinct M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a left join (SELECT product_code , count(distinct reseller_name ) totalresellers from CC_I2O_DATA_MART.viz_ppm_reseller where org_type='Amazon_1PP'  and   period >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -31 DAY) fromdate)  and period <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) group by product_code) b on a.product_code =b.product_code order by product_sales desc limit 5
LAST30_DAYS_RESELLERS_columns=product_code,totalresellers
LAST7_DAYS_LOWALERTCOUNT=select a.product_code,case when b.lowalert is null then 0 else lowalert end as lowalert from (select distinct M.product_code, round(S.product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join  CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code = S.product_code  where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a left join (select distinct product_code,count(distinct reseller_name) lowalert from (SELECT distinct  A.product_code ,coalesce (A.Reseller_Price,0) Reseller_Price, coalesce (cast(B.lpl as float64),0) lpl , coalesce( cast(B.MAP as float64),0) map ,A.reseller_name  reseller_name, FROM CC_I2O_DATA_MART.viz_ppm_reseller A left  join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin   left  join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.product_code =M.product_code   where A.reporting_range ='Daily' and  A.reseller_condition='New' and period >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY) fromdate)  and period <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) and M.org_type ='Amazon_1PP' ) where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) group by product_code) b on a.product_code=b.product_code order by product_sales  desc limit 5
LAST7_DAYS_LOWALERTCOUNT_columns=product_code,lowalert
LAST30_DAYS_LOWALERTCOUNT=select a.product_code,case when b.lowalert is null then 0 else lowalert end as lowalert from (select distinct M.product_code, round(S.product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join  CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code = S.product_code  where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true ) a left join (select distinct product_code,count(distinct reseller_name) lowalert from (SELECT distinct  A.product_code ,coalesce (A.Reseller_Price,0) Reseller_Price, coalesce (cast(B.lpl as float64),0) lpl , coalesce( cast(B.MAP as float64),0) map ,A.reseller_name  reseller_name, FROM CC_I2O_DATA_MART.viz_ppm_reseller A left  join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin   left  join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.product_code =M.product_code   where A.reporting_range ='Daily' and  A.reseller_condition='New' and period >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -31 DAY) fromdate)  and period <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) and M.org_type ='Amazon_1PP' ) where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) group by product_code) b on a.product_code=b.product_code order by product_sales  desc limit 5
LAST30_DAYS_LOWALERTCOUNT_columns=product_code,lowalert

RESOFF_EXPECTED_DATE=select min(period) min,max(period) actualdate  from CC_I2O_DATA_MART.viz_reseller_filtered
RESOFF_EXPECTED_DATE_columns=min,actualdate
DAILY_LISTING_RESELLEROFFERS=select  product_code,count(reseller_name ) offers from( select  product_code product_code  ,period , reseller_name, Reseller_Price,product_sales from (SELECT distinct  A.product_code product_code,A.period,A.win_buy_box win_buy_box,A.Reseller_Price Reseller_Price,B.lpl lpl ,B.MAP map,A.reseller_name  reseller_name,round(product_sales)  product_sales FROM CC_I2O_DATA_MART.viz_reseller_filtered A left outer join CC_I2O_DATA_REPO.asin_map_master B on A.product_code=B.asin left join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.product_code=M.product_code left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.pricemonitor_enabled is true and A.reseller_condition ='New' and A.period  =(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) fromdate)  ) group by reseller_name,product_code,period ,Reseller_Price,product_sales,win_buy_box) group by product_code,product_sales order by product_sales desc limit 5
DAILY_LISTING_RESELLEROFFERS_columns=product_code,offers

PAP_EXPECTED_DATE=select min(scrape_date) min,max(scrape_date) actualdate  from CC_I2O_DATA_VALIDATION.multiplatform_report_with_bb
PAP_EXPECTED_DATE_columns=min,actualdate
PAP_NEWEGG_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.multiplatform_enabled is true ) a  left join (SELECT distinct asin , scrape_date ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped ='newegg' and scrape_date =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by  a.product_sales desc limit 5
PAP_NEWEGG_PRICE_columns=product_code,buy_box_price
PAP_BESTBUY_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.multiplatform_enabled is true ) a  left join (SELECT distinct asin , scrape_date ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped ='bestbuy' and scrape_date =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by  a.product_sales desc limit 5
PAP_BESTBUY_PRICE_columns=product_code,buy_box_price
PAP_WALMART_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.multiplatform_enabled is true ) a  left join (SELECT distinct asin , scrape_date ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped ='walmart' and scrape_date =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by  a.product_sales desc limit 5
PAP_WALMART_PRICE_columns=product_code,buy_box_price
PAP_BHPPHOTOVIDEO_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.multiplatform_enabled is true ) a  left join (SELECT distinct asin , scrape_date ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped ='bhphotovideo' and scrape_date =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by  a.product_sales desc limit 5
PAP_BHPPHOTOVIDEO_PRICE_columns=product_code,buy_box_price
PAP_AMAZON_PRICE=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as amazonprice from ( select distinct  M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.multiplatform_enabled is true ) a  left join (SELECT distinct asin, scrape_date,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped='amazon' and scrape_date  =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by product_sales  desc limit 5
PAP_AMAZON_PRICE_columns=product_code,amazonprice
PAP_AMAZONBBX_PRICE=select a.product_code, case when b.price is null then 0 else price end as buy_box_price   from (select distinct M.product_code,round(product_sales)  product_sales from `CC_I2O_DATA_REPO.final_product_master_filtered` M left join CC_I2O_DATA_MART.viz_sales_conversion_filtered S on M.product_code=S.product_code where M.org_type='Amazon_1PP' and S.org_type='Amazon_1PP' and S.time_range ='Last Week' and M.multiplatform_enabled is true) a left join (SELECT distinct  product_code , round(coalesce((cast(buy_box_price  as float64)),0)) price from CC_I2O_DATA_MART.viz_ppm_platforms  WHERE marketplace='Amazon' and reporting_range ='Daily' and period=(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code =b.product_code order by product_sales desc LIMIT 5
PAP_AMAZONBBX_PRICE_columns=product_code,buy_box_price

UNSCRAPED_EXPECTED_DATE=select min(scrape_date) min,max(scrape_date) actualdate  from CC_I2O_DATA_VALIDATION.multiplatform_report_with_bb
UNSCRAPED_EXPECTED_DATE_columns=min,actualdate
DAILY_SCRAPPED=SELECT distinct product_code,case when scraped_platform_numbers is null then 0 else scraped_platform_numbers  end as scrapecount  FROM `CC_I2O_DATA_VALIDATION.multiplatform_report_with_bb` A left join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.asin =M.product_code where M.org_type='Amazon_1PP' AND M.multiplatform_enabled is true and A.scrape_date = (SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY))  order by product_code asc limit 5
DAILY_SCRAPPED_columns=product_code,scrapecount
DAILY_UNSCRAPPED=SELECT distinct product_code,4-cast(scraped_platform_numbers as int64) as unscrapedcount FROM `CC_I2O_DATA_VALIDATION.multiplatform_report_with_bb` A left join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.asin =M.product_code where M.org_type='Amazon_1PP' and M.multiplatform_enabled is true and A.scrape_date =(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY)) order by product_code asc limit 5
DAILY_UNSCRAPPED_columns=product_code,unscrapedcount

*****************************PriceMonitoring-3P******************************************************************

PRICETREND_EXPECTED_DATE3P=SELECT CURRENT_DATE() today, DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) yesterday
PRICETREND_EXPECTED_DATE3P_columns=today,yesterday
DAILY_BBXWINNER3P=select distinct  a.product_code , case when b.Buy_box_winning_seller is null then 'NULL' else b.Buy_box_winning_seller end as bbxwinner from ( select distinct product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and pricemonitor_enabled is true ) a  left join (SELECT distinct  product_code,period , Buy_box_winning_seller,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_reseller WHERE  reporting_range ='Daily' and period=(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code  order by  product_code asc limit 5
DAILY_BBXWINNER3P_columns=product_code,bbxwinner
DAILY_BBXWINNERPRICE3P=select distinct  a.product_code , case when b.buy_box_price is null then 0 else round(b.buy_box_price) end as bbxprice from ( select distinct product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and pricemonitor_enabled is true ) a  left join (SELECT distinct  product_code,period , Buy_box_winning_seller,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_reseller WHERE  reporting_range ='Daily' and period=(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code  order by  product_code asc limit 5
DAILY_BBXWINNERPRICE3P_columns=product_code,bbxprice

PAPPOPUP_EXPECTED_DATE3P=SELECT CURRENT_DATE() today, DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) yesterday
PAPPOPUP_EXPECTED_DATE3P_columns=today,yesterday
DAILY_NEWEGG_PRICE3P=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and pricemonitor_enabled is true ) a  left join (SELECT distinct   product_code ,period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE marketplace  ='newegg' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by buy_box_price desc limit 5
DAILY_NEWEGG_PRICE3P_columns=product_code,buy_box_price
DAILY_BESTBUY_PRICE3P=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and pricemonitor_enabled is true ) a  left join (SELECT distinct   product_code ,period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE marketplace  ='bestbuy' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by buy_box_price desc limit 5
DAILY_BESTBUY_PRICE3P_columns=product_code,buy_box_price
DAILY_WALMART_PRICE3P=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and pricemonitor_enabled is true ) a  left join (SELECT distinct   product_code ,period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE marketplace  ='walmart' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by buy_box_price desc limit 5
DAILY_WALMART_PRICE3P_columns=product_code,buy_box_price
DAILY_BHPPHOTOVIDEO_PRICE3P=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and pricemonitor_enabled is true ) a  left join (SELECT distinct   product_code ,period ,buy_box_price FROM CC_I2O_DATA_MART.viz_ppm_platforms WHERE marketplace  ='bhphotovideo' and period =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.product_code order by buy_box_price desc limit 5
DAILY_BHPPHOTOVIDEO_PRICE3P_columns=product_code,buy_box_price
DAILY_AMAZONBBX_PRICE3P=select product_code,  case when buy_box_price is null then 0 else round(buy_box_price) end as buy_box_price  from (SELECT distinct M.product_code ,period ,buy_box_price FROM CC_I2O_DATA_REPO.final_product_master_filtered M left join CC_I2O_DATA_MART.viz_ppm_platforms R on M.product_code=R.product_code WHERE R.period=(select date_sub(CURRENT_DATE, INTERVAL 1 day)  from CC_I2O_DATA_REPO.last_load_run) and reporting_range='Daily' and R.marketplace='Amazon' and M.org_type='Amazon_3P' and R.org_type='Amazon_3P'  and M.pricemonitor_enabled is true ) order by buy_box_price desc limit 5
DAILY_AMAZONBBX_PRICE3P_columns=product_code,buy_box_price

RESDETAILS_EXPECTED_DATE3P=SELECT CURRENT_DATE() today, DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) yesterday
RESDETAILS_EXPECTED_DATE3P_columns=today,yesterday
LAST7_DAYS_BBXWINNER3P=select a.product_code, case when b.buyboxwinner is null then 0 else buyboxwinner end as buyboxwinner   from (SELECT distinct product_code FROM  `CC_I2O_DATA_REPO.final_product_master_filtered` where  org_type='Amazon_3P' and pricemonitor_enabled is true ) a left join (SELECT product_code , count(distinct reseller_name ) buyboxwinner from CC_I2O_DATA_MART.viz_ppm_reseller where org_type='Amazon_3P' and won_buy_box='Yes' and period >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY) fromdate)  and period <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) group by product_code) b on a.product_code =b.product_code order by buyboxwinner desc limit 5
LAST7_DAYS_BBXWINNER3P_columns=product_code,buyboxwinner
LAST30_DAYS_RESELLERS3P=select a.product_code, case when b.totalresellers is null then 0 else totalresellers end as totalresellers  from (SELECT distinct product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where pricemonitor_enabled is true and org_type='Amazon_3P' ) a left join (SELECT product_code , count(distinct reseller_name ) totalresellers from CC_I2O_DATA_MART.viz_ppm_reseller where org_type='Amazon_3P'  and   period >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -31 DAY) fromdate)  and period <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) group by product_code) b on a.product_code =b.product_code order by totalresellers desc limit 5
LAST30_DAYS_RESELLERS3P_columns=product_code,totalresellers
LAST7_DAYS_LOWALERTCOUNT3P=select a.product_code,case when b.lowalert is null then 0 else lowalert end as lowalert from (select distinct product_code from `CC_I2O_DATA_REPO.final_product_master_filtered`  where org_type ='Amazon_3P' and pricemonitor_enabled is true ) a left join (select product_code,count(distinct reseller_name) lowalert from (SELECT A.product_code ,coalesce (A.Reseller_Price,0) Reseller_Price, coalesce (cast(B.lpl as float64),0) lpl , coalesce( cast(B.MAP as float64),0) map ,A.reseller_name  reseller_name, FROM CC_I2O_DATA_MART.viz_ppm_reseller A left  join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin   left  join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.product_code  =M.product_code   where  A.reseller_condition='New' and A.period  >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY) fromdate)  and A.period  <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) and M.org_type ='Amazon_3P'  and A.reseller_condition='New') where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) group by product_code) b on a.product_code=b.product_code order by lowalert desc limit 5
LAST7_DAYS_LOWALERTCOUNT3P_columns=product_code,lowalert
LAST30_DAYS_LOWALERTCOUNT3P=select a.product_code,case when b.lowalert is null then 0 else lowalert end as lowalert from (select distinct product_code from `CC_I2O_DATA_REPO.final_product_master_filtered`  where org_type ='Amazon_3P' and pricemonitor_enabled is true ) a left join (select product_code,count(distinct reseller_name) lowalert from (SELECT A.product_code ,coalesce (A.Reseller_Price,0) Reseller_Price, coalesce (cast(B.lpl as float64),0) lpl , coalesce( cast(B.MAP as float64),0) map ,A.reseller_name  reseller_name, FROM CC_I2O_DATA_MART.viz_ppm_reseller A left  join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin   left  join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.product_code  =M.product_code   where  A.reseller_condition='New' and A.period  >=(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -31 DAY) fromdate)  and A.period  <=(select daily_load_date from CC_I2O_DATA_REPO.last_load_run) and M.org_type ='Amazon_3P'  and A.reseller_condition='New') where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) group by product_code) b on a.product_code=b.product_code order by lowalert desc limit 5
LAST30_DAYS_LOWALERTCOUNT3P_columns=product_code,lowalert

RESOFF_EXPECTED_DATE3P=SELECT CURRENT_DATE() today, DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) yesterday
RESOFF_EXPECTED_DATE3P_columns=today,yesterday
DAILY_LISTING_RESELLEROFFERS3P=select product_code,count(product_code ) offers from( select product_code product_code  ,period , reseller_name, Reseller_Price from (SELECT distinct  A.product_code product_code,A.period ,A.Reseller_Price Reseller_Price,B.lpl lpl ,B.MAP map,A.reseller_name  reseller_name FROM CC_I2O_DATA_MART.viz_reseller_filtered A left outer join CC_I2O_DATA_REPO.asin_map_master B on A.product_code=B.asin left join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.product_code=M.product_code  where M.org_type='Amazon_3P' and A.org_type='Amazon_3P' and A.reseller_condition ='New' and A.period  =(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) fromdate)  ) group by reseller_name,product_code,period ,Reseller_Price) group by product_code order by offers desc limit 5
DAILY_LISTING_RESELLEROFFERS3P_columns=product_code,offers

PAP_EXPECTED_DATE3P=SELECT CURRENT_DATE() today, DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) yesterday
PAP_EXPECTED_DATE3P_columns=today,yesterday
PAP_NEWEGG_PRICE3P=select distinct  a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and multiplatform_enabled is true ) a  left join (SELECT scrape_date, asin ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped='newegg' and scrape_date  =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by buy_box_price desc limit 5
PAP_NEWEGG_PRICE3P_columns=product_code,buy_box_price
PAP_BESTBUY_PRICE3P=select distinct  a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and multiplatform_enabled is true ) a  left join (SELECT scrape_date, asin ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped='bestbuy' and scrape_date  =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by buy_box_price desc limit 5
PAP_BESTBUY_PRICE3P_columns=product_code,buy_box_price
PAP_WALMART_PRICE3P=select distinct  a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and multiplatform_enabled is true ) a  left join (SELECT scrape_date, asin ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped='walmart' and scrape_date  =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by buy_box_price desc limit 5
PAP_WALMART_PRICE3P_columns=product_code,buy_box_price
PAP_BHPPHOTOVIDEO_PRICE3P=select distinct  a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as buy_box_price from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and multiplatform_enabled is true ) a  left join (SELECT scrape_date, asin ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped='bhphotovideo' and scrape_date  =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by buy_box_price desc limit 5
PAP_BHPPHOTOVIDEO_PRICE3P_columns=product_code,buy_box_price
PAP_AMAZON_PRICE3P=select a.product_code ,case when b.buy_box_price is null then 0.0 else round(B.buy_box_price) end as amazonprice from ( select distinct  product_code from `CC_I2O_DATA_REPO.final_product_master_filtered` where org_type='Amazon_3P' and multiplatform_enabled is true ) a  left join (SELECT scrape_date, asin ,buy_box_price FROM CC_I2O_DATA_MART.viz_platforms_comparison WHERE scraped='amazon' and scrape_date  =(select date_sub(CURRENT_DATE, INTERVAL 1 day) from CC_I2O_DATA_REPO.last_load_run)) b on a.product_code = b.asin order by amazonprice  desc limit 5
PAP_AMAZON_PRICE3P_columns=product_code,amazonprice
PAP_AMAZONBBX_PRICE3P=select product_code,  case when buy_box_price is null then 0 else round(buy_box_price) end as buy_box_price  from (SELECT distinct M.product_code ,period ,buy_box_price FROM CC_I2O_DATA_REPO.final_product_master_filtered M left join CC_I2O_DATA_MART.viz_ppm_platforms R on M.product_code=R.product_code WHERE R.period=(select date_sub(CURRENT_DATE, INTERVAL 1 day)  from CC_I2O_DATA_REPO.last_load_run) and reporting_range='Daily' and R.marketplace='Amazon' and M.org_type='Amazon_3P' and R.org_type='Amazon_3P'  and M.multiplatform_enabled is true ) order by buy_box_price desc limit 5
PAP_AMAZONBBX_PRICE3P_columns=product_code,buy_box_price

UNSCRAPED_EXPECTED_DATE3P=SELECT CURRENT_DATE() today, DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) yesterday
UNSCRAPED_EXPECTED_DATE3P_columns=today,yesterday
DAILY_SCRAPPED3P=SELECT distinct product_code,case when scraped_platform_numbers is null then 0 else scraped_platform_numbers  end as scrapecount  FROM `CC_I2O_DATA_VALIDATION.multiplatform_report_with_bb` A left join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.asin =M.product_code where M.org_type='Amazon_3P' AND M.multiplatform_enabled is true and A.scrape_date = (SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY))  order by product_code asc limit 5
DAILY_SCRAPPED3P_columns=product_code,scrapecount
DAILY_UNSCRAPPED3P=SELECT distinct product_code,4-cast(scraped_platform_numbers as int64) as unscrapedcount FROM `CC_I2O_DATA_VALIDATION.multiplatform_report_with_bb` A left join `CC_I2O_DATA_REPO.final_product_master_filtered` M on A.asin =M.product_code where M.org_type='Amazon_3P' and M.multiplatform_enabled is true and A.scrape_date =(SELECT  DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY)) order by product_code asc limit 5
DAILY_UNSCRAPPED3P_columns=product_code,unscrapedcount



































