*****************************BCM-1P-PRESTAGE*******************************************************************************
SCORE_LATESTDATE=select product_code,round(cast(titlescore as float64)+cast(bulletscore as float64)+cast(imagescore as float64)+cast(a_plusscore as float64)) score from (Select scrape_date scrape_date,product_code product_code, a_plus, photos_count,length(product_title) titlecount, length(full_description) full_descriptioncount,   ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) bulletcount, \
 CASE  WHEN length(product_title) <= 81 THEN '6'\
    WHEN length(product_title) > 81 THEN '12'\
    ELSE '4'\
END AS titlescore,\
CASE WHEN ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) <= 3 THEN '6'\
    WHEN ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) > 3 and ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) <=5 THEN '12'\
     WHEN ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) >5 THEN '18'\
    ELSE '4'\
    END AS bulletscore,\
  CASE WHEN photos_count <= 3 THEN '13.33'\
    WHEN photos_count > 3 and photos_count <= 5  THEN '26.66'\
    WHEN photos_count > 5 THEN '39.99'\
    ELSE '4'\
END AS imagescore,\
 CASE WHEN a_plus = 'Yes' THEN '15'\
    WHEN a_plus = 'No'  THEN '0'\
    ELSE '0'\
END AS a_plusscore from CC_I2O_DATA_REVENUE_LAKE.product_pricing_hstry_data ) T inner join CC_I2O_DATA_PRE_STG.vc_sales_diagnostics_sourcing_detail S on T.product_code  =S.ASIN   group by product_code,score,scrape_date,s.Shipped_COGS  order by scrape_date desc,cast(s.Shipped_COGS as float64) desc limit 10
SCORE_LATESTDATE_columns=product_code,score

SCOREKEYWORD=select M.product_code,K.keyword  from  CC_I2O_DATA_REPO.input_keywords K inner join `CC_I2O_DATA_REPO.final_product_master_filtered` M on K.product_type=M.category where M.product_code='B07H1B3PY9' order by M.product_code asc 


*****************************BCM-3P-PRESTAGE*******************************************************************************
SCORE_LATESTDATE3P=select product_code,round(cast(titlescore as float64)+cast(bulletscore as float64)+cast(imagescore as float64)+cast(a_plusscore as float64)) score from (Select scrape_date scrape_date,product_code product_code, a_plus, photos_count,length(product_title) titlecount, length(full_description) full_descriptioncount,   ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) bulletcount, \
 CASE  WHEN length(product_title) <= 81 THEN '6'\
    WHEN length(product_title) > 81 THEN '12'\
    ELSE '4'\
END AS titlescore,\
CASE WHEN ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) <= 3 THEN '6'\
    WHEN ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) > 3 and ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) <=5 THEN '12'\
     WHEN ((length(bullet_point_text) - length(replace(bullet_point_text, '|||', '')))/3+1) >5 THEN '18'\
    ELSE '4'\
    END AS bulletscore,\
  CASE WHEN photos_count <= 3 THEN '13.33'\
    WHEN photos_count > 3 and photos_count <= 5  THEN '26.66'\
    WHEN photos_count > 5 THEN '39.99'\
    ELSE '4'\
END AS imagescore,\
 CASE WHEN a_plus = 'Yes' THEN '15'\
    WHEN a_plus = 'No'  THEN '0'\
    ELSE '0'\
END AS a_plusscore from CC_I2O_DATA_REVENUE_LAKE.product_pricing_hstry_data ) T inner join CC_I2O_DATA_PRE_STG.vc_sales_diagnostics_sourcing_detail S on T.product_code  =S.ASIN   group by product_code,score,scrape_date,s.Shipped_COGS  order by scrape_date desc,cast(s.Shipped_COGS as float64) desc limit 10
SCORE_LATESTDATE3P_columns=product_code,score

SCOREKEYWORD=select M.product_code,K.keyword  from  CC_I2O_DATA_REPO.input_keywords K inner join `CC_I2O_DATA_REPO.final_product_master_filtered` M on K.product_type=M.category where M.product_code='B07H1B3PY9' order by M.product_code asc 


*****************************BCM-1P-MART*******************************************************************************
SCORE_LATESTDATE=select a.product_code,case when overallscore is null then 0.0 else overallscore end as overallscore from (SELECT distinct  product_code,period,product_sales FROM `CC_I2O_DATA_MART.viz_sales_conversion_filtered` where time_range='Last Week' and org_type='Amazon_1PP' )  a left join (SELECT   productcode,overallscore,calculateddate,row_number() over (partition by productcode order by calculateddate desc) as cnt FROM `CC_I2O_DATA_MART.viz_score_percentage`) b on a.product_code=b.productcode  where cnt=1 order by product_sales desc limit 10
SCORE_LATESTDATE_columns=product_code,overallscore


*****************************BCM-3P-MART*******************************************************************************
SCORE_LATESTDATE3P=select a.product_code,case when overallscore is null then 0.0 else round(overallscore) end as overallscore from (SELECT distinct product_code,period,product_sales FROM `CC_I2O_DATA_MART.viz_sales_conversion_filtered` where time_range='Last Week' AND org_type='Amazon_3P' )  a left join (SELECT productcode,overallscore,calculateddate,row_number() over (partition by productcode order by calculateddate desc) as cnt FROM `CC_I2O_DATA_MART.viz_score_percentage`)  b on a.product_code=b.productcode  where cnt=1 order by product_sales desc limit 10
SCORE_LATESTDATE3P_columns=product_code,overallscore


*****************************PRICING-1P*******************************************************************************

LASTWEEK_LOWALERTLISTINSAMZN=select scrape_Date,sum(lowalert) lowalerlistingsamz from(select product_code,scrape_date,count( reseller_name) lowalert from (SELECT A.product_code product_code,DATE_TRUNC(scrape_date, WEEK(SUNDAY)) as scrape_Date,A.Reseller_Price Reseller_Price,B.lpl lpl ,B.MAP map,A.reseller_name  reseller_name FROM CC_I2O_DATA_REVENUE_LAKE.reseller_hstry_data A inner join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin inner join `CC_I2O_DATA_REPO.final_product_master_filtered` M on M.product_code=A.product_code  left  outer join CC_I2O_DATA_REPO.input_groups_extract G on A.product_code =G.product_code  where M.org_type='Amazon_1PP' and A.reseller_name='Amazon.com' and A.Scrape_Date between '2020-06-07'  and  '2020-06-13') where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) group by product_code,scrape_date) group by 1
LASTWEEK_LOWALERTLISTINSAMZN_columns=scrape_date,lowalerlistingsamz
LASTWEEK_LOWALERTLISTINSAUTH=select DATE_TRUNC(scrape_date, WEEK(SUNDAY)) as week_date,count( product_code ) lowalerlistingauth from(  select product_code,scrape_date,reseller_name ,Reseller_Price   from (SELECT A.product_code product_code,A.scrape_Date as scrape_Date ,A.Reseller_Price Reseller_Price,B.lpl lpl ,B.MAP map,A.reseller_name  reseller_name FROM CC_I2O_DATA_REVENUE_LAKE.reseller_hstry_data A inner join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin inner join `CC_I2O_DATA_REPO.final_product_master_filtered` M on M.product_code=A.product_code left join `CC_I2O_DATA_REPO.auth_resellers_list` R on A.product_code=R.product_code and A.reseller_name = R.Authorized_Resellers left  outer join CC_I2O_DATA_REPO.input_groups_extract G on A.product_code =G.product_code  where M.org_type='Amazon_1PP' and R.org_type='Amazon_1PP' and  A.reseller_name<> 'Amazon.com' and A.Scrape_Date between '2020-06-07'  and  '2020-06-13') where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) ) group by 1
LASTWEEK_LOWALERTLISTINSAUTH_columns=week_date,lowalerlistingauth
LASTWEEK_LOWALERTLISTINS=select scrape_Date,sum(lowalert) lowalerlistings from(select product_code,scrape_date,count( reseller_name) lowalert from (SELECT A.product_code product_code,DATE_TRUNC(scrape_date, WEEK(SUNDAY)) as scrape_Date,A.Reseller_Price Reseller_Price,B.lpl lpl ,B.MAP map,A.reseller_name  reseller_name FROM CC_I2O_DATA_REVENUE_LAKE.reseller_hstry_data A inner join CC_I2O_DATA_REPO.asin_map_master B on A.input_asin =B.asin inner join `CC_I2O_DATA_REPO.final_product_master_filtered` M on M.product_code=A.product_code left  outer join CC_I2O_DATA_REPO.input_groups_extract G on A.product_code =G.product_code   where M.org_type='Amazon_1PP' and A.Scrape_Date between '2020-06-07'  and  '2020-06-13' and A.reseller_condition ='New' ) where ( Reseller_Price < cast(lpl   as float64) or  Reseller_Price < cast(map   as float64)) group by product_code,scrape_date) group by 1
LASTWEEK_LOWALERTLISTINS_columns=scrape_date,authcount






